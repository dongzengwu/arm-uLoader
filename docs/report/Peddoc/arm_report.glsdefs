\ifglsentryexists{can}{}%
{%
\gls@defglossaryentry{can}%
{%
name={CAN},%
sort={CAN},%
type={main},%
first={CAN},%
firstplural={CANs},%
text={CAN},%
plural={CANs},%
description={Controller Area Network ist ein serrieller BUS der asynchron arbeitet. 1 Mbit/s ist hierbei die Maximale Datenrate. Wird meist in Fahrzeugen eingesetzt.},%
descriptionplural={Controller Area Network ist ein serrieller BUS der asynchron arbeitet. 1 Mbit/s ist hierbei die Maximale Datenrate. Wird meist in Fahrzeugen eingesetzt.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{usability}{}%
{%
\gls@defglossaryentry{usability}%
{%
name={Usability},%
sort={Usability},%
type={main},%
first={Usability},%
firstplural={Usabilitys},%
text={Usability},%
plural={Usabilitys},%
description={Beschreibt ein Maß wie leicht ein Programm, ohne die Anleitung zu lesen, bedienbar ist. Mehrere ISO beschäftigen sich hiermit unteranderem ISO 9241-11},%
descriptionplural={Beschreibt ein Maß wie leicht ein Programm, ohne die Anleitung zu lesen, bedienbar ist. Mehrere ISO beschäftigen sich hiermit unteranderem ISO 9241-11},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{unix}{}%
{%
\gls@defglossaryentry{unix}%
{%
name={UNIX},%
sort={UNIX},%
type={main},%
first={UNIX},%
firstplural={UNIXs},%
text={UNIX},%
plural={UNIXs},%
description={Steht heute im wesentlich für das Konzept eines Betriebssystems, was 1969 Entwickelt wurde bzw. die ihren Ursprung davon haben.},%
descriptionplural={Steht heute im wesentlich für das Konzept eines Betriebssystems, was 1969 Entwickelt wurde bzw. die ihren Ursprung davon haben.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{linux}{}%
{%
\gls@defglossaryentry{linux}%
{%
name={Linux},%
sort={Linux},%
type={main},%
first={Linux},%
firstplural={Linuxs},%
text={Linux},%
plural={Linuxs},%
description={Meist sind damit Betriebssysteme gemeint die Unix ähnlich sind, dabei aber den von Linus Torvalds gepflegten Kernel benutzen samt GNU Sfotware.},%
descriptionplural={Meist sind damit Betriebssysteme gemeint die Unix ähnlich sind, dabei aber den von Linus Torvalds gepflegten Kernel benutzen samt GNU Sfotware.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{c}{}%
{%
\gls@defglossaryentry{c}%
{%
name={C},%
sort={C},%
type={main},%
first={C},%
firstplural={Cs},%
text={C},%
plural={Cs},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{html}{}%
{%
\gls@defglossaryentry{html}%
{%
name={HTML},%
sort={HTML},%
type={main},%
first={HTML},%
firstplural={HTMLs},%
text={HTML},%
plural={HTMLs},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{javascript}{}%
{%
\gls@defglossaryentry{javascript}%
{%
name={Javascript},%
sort={Javascript},%
type={main},%
first={Javascript},%
firstplural={Javascripts},%
text={Javascript},%
plural={Javascripts},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ajax}{}%
{%
\gls@defglossaryentry{ajax}%
{%
name={AJAX},%
sort={AJAX},%
type={main},%
first={AJAX},%
firstplural={AJAXs},%
text={AJAX},%
plural={AJAXs},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{tcp}{}%
{%
\gls@defglossaryentry{tcp}%
{%
name={TCP},%
sort={TCP},%
type={main},%
first={TCP},%
firstplural={TCPs},%
text={TCP},%
plural={TCPs},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ip}{}%
{%
\gls@defglossaryentry{ip}%
{%
name={IP},%
sort={IP},%
type={main},%
first={IP},%
firstplural={IPs},%
text={IP},%
plural={IPs},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{bug}{}%
{%
\gls@defglossaryentry{bug}%
{%
name={Bug},%
sort={Bug},%
type={main},%
first={Bug},%
firstplural={Bugs},%
text={Bug},%
plural={Bugs},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{shield}{}%
{%
\gls@defglossaryentry{shield}%
{%
name={shield},%
sort={shield},%
type={main},%
first={shield},%
firstplural={shields},%
text={shield},%
plural={shields},%
description={Kupferblech welches das betroffene Gerät von außen abschirmt},%
descriptionplural={Kupferblech welches das betroffene Gerät von außen abschirmt},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{emi}{}%
{%
\gls@defglossaryentry{emi}%
{%
name={EMI},%
sort={EMI},%
type={main},%
first={EMI},%
firstplural={EMIs},%
text={EMI},%
plural={EMIs},%
description={\textit {Electromagnetic interference} sind Störungen, die zumeist durch Induktion oder Strahlung verursacht werden. Sie wirkt sich auf den Empfang, oder andere, oft ungeschirmte Elektronik, aus},%
descriptionplural={\textit {Electromagnetic interference} sind Störungen, die zumeist durch Induktion oder Strahlung verursacht werden. Sie wirkt sich auf den Empfang, oder andere, oft ungeschirmte Elektronik, aus},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{repositorie}{}%
{%
\gls@defglossaryentry{repositorie}%
{%
name={Repositorie},%
sort={Repositorie},%
type={main},%
first={Repositorie},%
firstplural={Repositories},%
text={Repositorie},%
plural={Repositories},%
description={Ein Verzeichnis bzw. Lager für digitale Inhalte. Hier ist speziell ein Software-Repository gemeint. Das zusätzlich zu den eigentlichen Programmen noch Informationen wie Abhängigkeiten etc. zu Verfügung stellt},%
descriptionplural={Ein Verzeichnis bzw. Lager für digitale Inhalte. Hier ist speziell ein Software-Repository gemeint. Das zusätzlich zu den eigentlichen Programmen noch Informationen wie Abhängigkeiten etc. zu Verfügung stellt},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{toolchain}{}%
{%
\gls@defglossaryentry{toolchain}%
{%
name={Toolchain},%
sort={Toolchain},%
type={main},%
first={Toolchain},%
firstplural={Toolchains},%
text={Toolchain},%
plural={Toolchains},%
description={Sammlung von Software, die zur Erstellung von Programmen genutzt werden. Enthält unter anderem, Compiler, Linker und Bibliotheken},%
descriptionplural={Sammlung von Software, die zur Erstellung von Programmen genutzt werden. Enthält unter anderem, Compiler, Linker und Bibliotheken},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{kompiler}{}%
{%
\gls@defglossaryentry{kompiler}%
{%
name={Kompiler},%
sort={Kompiler},%
type={main},%
first={Kompiler},%
firstplural={Kompilers},%
text={Kompiler},%
plural={Kompilers},%
description={Hierbei handelt es sich um einen speziellen Übersetzer. Der eine Hochsprache in eine Form übersetzt, die von der Ziel-Prozessorarchitektur interpretiert werden kann},%
descriptionplural={Hierbei handelt es sich um einen speziellen Übersetzer. Der eine Hochsprache in eine Form übersetzt, die von der Ziel-Prozessorarchitektur interpretiert werden kann},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{crossCompiling}{}%
{%
\gls@defglossaryentry{crossCompiling}%
{%
name={Cross Compiling},%
sort={Cross Compiling},%
type={main},%
first={Cross Compiling},%
firstplural={Cross Compilings},%
text={Cross Compiling},%
plural={Cross Compilings},%
description={Das Verfahren, ein Programm für eine andere Rechnerarchitektur zu kompilieren, als das System auf dem kompiliert wird},%
descriptionplural={Das Verfahren, ein Programm für eine andere Rechnerarchitektur zu kompilieren, als das System auf dem kompiliert wird},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{rechnerarchitektur}{}%
{%
\gls@defglossaryentry{rechnerarchitektur}%
{%
name={Rechnerarchitektur},%
sort={Rechnerarchitektur},%
type={main},%
first={Rechnerarchitektur},%
firstplural={Rechnerarchitekturs},%
text={Rechnerarchitektur},%
plural={Rechnerarchitekturs},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{git}{}%
{%
\gls@defglossaryentry{git}%
{%
name={Git},%
sort={Git},%
type={main},%
first={Git},%
firstplural={Gits},%
text={Git},%
plural={Gits},%
description={Sehr schnelle Versionsverwaltung. Wird für Quellcode-Verwaltung des Linux Kernels verwendet.},%
descriptionplural={Sehr schnelle Versionsverwaltung. Wird für Quellcode-Verwaltung des Linux Kernels verwendet.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{opkg}{}%
{%
\gls@defglossaryentry{opkg}%
{%
name={opkg},%
sort={opkg},%
type={main},%
first={opkg},%
firstplural={opkgs},%
text={opkg},%
plural={opkgs},%
description={Paketverwaltung für eingebettete Linux. Programmiert in C. Ähnlich dem dpkg oder apt. Wird im Gegensatz zu ipkg gepflegt},%
descriptionplural={Paketverwaltung für eingebettete Linux. Programmiert in C. Ähnlich dem dpkg oder apt. Wird im Gegensatz zu ipkg gepflegt},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{derivat}{}%
{%
\gls@defglossaryentry{derivat}%
{%
name={Derivat},%
sort={Derivat},%
type={main},%
first={Derivat},%
firstplural={Derivats},%
text={Derivat},%
plural={Derivats},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{rs232}{}%
{%
\gls@defglossaryentry{rs232}%
{%
name={RS232},%
sort={RS232},%
type={main},%
first={RS232},%
firstplural={RS232s},%
text={RS232},%
plural={RS232s},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{gui}{}%
{%
\gls@defglossaryentry{gui}%
{%
name={GUI},%
sort={GUI},%
type={main},%
first={GUI},%
firstplural={GUIs},%
text={GUI},%
plural={GUIs},%
description={Ein \textit {Graphical User Interface} ist eine Software-Komponente, die es dem Benutzer ermöglicht ein System mittels grafischer Symbole zu steuern},%
descriptionplural={Ein \textit {Graphical User Interface} ist eine Software-Komponente, die es dem Benutzer ermöglicht ein System mittels grafischer Symbole zu steuern},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{luci}{}%
{%
\gls@defglossaryentry{luci}%
{%
name={LUCI},%
sort={LUCI},%
type={main},%
first={LUCI},%
firstplural={LUCIs},%
text={LUCI},%
plural={LUCIs},%
description={Modulare WebUI für OpenWrt. Das in 17 Sprachen erhältlich ist. In LUA geschrieben. Speziell auf Linux Neulinge ausgerichtet, die eine GUI gewohnt sind},%
descriptionplural={Modulare WebUI für OpenWrt. Das in 17 Sprachen erhältlich ist. In LUA geschrieben. Speziell auf Linux Neulinge ausgerichtet, die eine GUI gewohnt sind},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ssh}{}%
{%
\gls@defglossaryentry{ssh}%
{%
name={SSH},%
sort={SSH},%
type={main},%
first={SSH},%
firstplural={SSHs},%
text={SSH},%
plural={SSHs},%
description={Bei einer \textit {Secure Shell} handelt es sich sowohl um ein Netzwerkprotokoll, als auch um diverse Programme, die zum herstellen einer sicheren Verbindung unter netzwerkfähigen Geräten verwendet wird},%
descriptionplural={Bei einer \textit {Secure Shell} handelt es sich sowohl um ein Netzwerkprotokoll, als auch um diverse Programme, die zum herstellen einer sicheren Verbindung unter netzwerkfähigen Geräten verwendet wird},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{scp}{}%
{%
\gls@defglossaryentry{scp}%
{%
name={SCP},%
sort={SCP},%
type={main},%
first={SCP},%
firstplural={SCPs},%
text={SCP},%
plural={SCPs},%
description={\textit {Secure Copy} ist ein Programm zur sicheren, verschlüsselten Datenübertragung zwischen Rechnern},%
descriptionplural={\textit {Secure Copy} ist ein Programm zur sicheren, verschlüsselten Datenübertragung zwischen Rechnern},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ram}{}%
{%
\gls@defglossaryentry{ram}%
{%
name={RAM},%
sort={RAM},%
type={main},%
first={RAM},%
firstplural={RAMs},%
text={RAM},%
plural={RAMs},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ipc}{}%
{%
\gls@defglossaryentry{ipc}%
{%
name={IPC},%
sort={IPC},%
type={main},%
first={IPC},%
firstplural={IPCs},%
text={IPC},%
plural={IPCs},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{daemon}{}%
{%
\gls@defglossaryentry{daemon}%
{%
name={Daemon},%
sort={Daemon},%
type={main},%
first={Daemon},%
firstplural={Daemons},%
text={Daemon},%
plural={Daemons},%
description={Programm das im Hintergrund abläuft und bestimmte Dienste zu Verfügung stellt. Kommunikation erfolgt oft mittels Pipes und Sockets},%
descriptionplural={Programm das im Hintergrund abläuft und bestimmte Dienste zu Verfügung stellt. Kommunikation erfolgt oft mittels Pipes und Sockets},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{littleEndian}{}%
{%
\gls@defglossaryentry{littleEndian}%
{%
name={Little Endian},%
sort={Little Endian},%
type={main},%
first={Little Endian},%
firstplural={Little Endians},%
text={Little Endian},%
plural={Little Endians},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{cgi}{}%
{%
\gls@defglossaryentry{cgi}%
{%
name={CGI},%
sort={CGI},%
type={main},%
first={CGI},%
firstplural={CGIs},%
text={CGI},%
plural={CGIs},%
description={Common Gateway Interface ist dafür verantwortlich das der Webserver und dritte Programme mit einander Kommunizieren können.},%
descriptionplural={Common Gateway Interface ist dafür verantwortlich das der Webserver und dritte Programme mit einander Kommunizieren können.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ramdisk}{}%
{%
\gls@defglossaryentry{ramdisk}%
{%
name={CAN},%
sort={CAN},%
type={main},%
first={CAN},%
firstplural={CANs},%
text={CAN},%
plural={CANs},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{spaghetticode}{}%
{%
\gls@defglossaryentry{spaghetticode}%
{%
name={Spaghetticode},%
sort={Spaghetticode},%
type={main},%
first={Spaghetticode},%
firstplural={Spaghetticodes},%
text={Spaghetticode},%
plural={Spaghetticodes},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{md5}{}%
{%
\gls@defglossaryentry{md5}%
{%
name={md5},%
sort={md5},%
type={main},%
first={md5},%
firstplural={md5s},%
text={md5},%
plural={md5s},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{namedPipe}{}%
{%
\gls@defglossaryentry{namedPipe}%
{%
name={Named Pipe},%
sort={Named Pipe},%
type={main},%
first={Named Pipe},%
firstplural={Named Pipes},%
text={Named Pipe},%
plural={Named Pipes},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{pipe}{}%
{%
\gls@defglossaryentry{pipe}%
{%
name={Pipe},%
sort={Pipe},%
type={main},%
first={Pipe},%
firstplural={Pipes},%
text={Pipe},%
plural={Pipes},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{messageQueue}{}%
{%
\gls@defglossaryentry{messageQueue}%
{%
name={Message Queue},%
sort={Message Queue},%
type={main},%
first={Message Queue},%
firstplural={Message Queues},%
text={Message Queue},%
plural={Message Queues},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{blockingIO}{}%
{%
\gls@defglossaryentry{blockingIO}%
{%
name={Blocking IO},%
sort={Blocking IO},%
type={main},%
first={Blocking IO},%
firstplural={Blocking IOs},%
text={Blocking IO},%
plural={Blocking IOs},%
description={Bei Ein- und Ausgabe-Befehlen wird hierbei gewartet bis Daten vorliegen. Solange dies nicht der Fall ist wird der Prozess schlafen gelegt, damit er kaum Ressourcen belegt.},%
descriptionplural={Bei Ein- und Ausgabe-Befehlen wird hierbei gewartet bis Daten vorliegen. Solange dies nicht der Fall ist wird der Prozess schlafen gelegt, damit er kaum Ressourcen belegt.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{sleep}{}%
{%
\gls@defglossaryentry{sleep}%
{%
name={sleep},%
sort={sleep},%
type={main},%
first={sleep},%
firstplural={sleeps},%
text={sleep},%
plural={sleeps},%
description={Die Funktion sleep() Zeigt dem Prozessverwaltungsprogramm an, dass es seine Rechenzeit für einen gewissen Zeitraum nicht benötigt.},%
descriptionplural={Die Funktion sleep() Zeigt dem Prozessverwaltungsprogramm an, dass es seine Rechenzeit für einen gewissen Zeitraum nicht benötigt.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{printfDebugging}{}%
{%
\gls@defglossaryentry{printfDebugging}%
{%
name={printf debugging},%
sort={printf debugging},%
type={main},%
first={printf debugging},%
firstplural={printf debuggings},%
text={printf debugging},%
plural={printf debuggings},%
description={Die Methode printf() zu benutzen um zu erfahren, wo sich der Programmdurchlauf im Moment befindet und welche Daten gehalten werden},%
descriptionplural={Die Methode printf() zu benutzen um zu erfahren, wo sich der Programmdurchlauf im Moment befindet und welche Daten gehalten werden},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{profiling}{}%
{%
\gls@defglossaryentry{profiling}%
{%
name={Profiling},%
sort={Profiling},%
type={main},%
first={Profiling},%
firstplural={Profilings},%
text={Profiling},%
plural={Profilings},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{firebug}{}%
{%
\gls@defglossaryentry{firebug}%
{%
name={Firebug},%
sort={Firebug},%
type={main},%
first={Firebug},%
firstplural={Firebugs},%
text={Firebug},%
plural={Firebugs},%
description={Ein Debugger, speziell auf WEB-Techniken ausgerichtet. Der für Firefox als Addon zur Verfügung steht.},%
descriptionplural={Ein Debugger, speziell auf WEB-Techniken ausgerichtet. Der für Firefox als Addon zur Verfügung steht.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{hack}{}%
{%
\gls@defglossaryentry{hack}%
{%
name={hack},%
sort={hack},%
type={main},%
first={hack},%
firstplural={hacks},%
text={hack},%
plural={hacks},%
description={Umgehen eines Hindernisses},%
descriptionplural={Umgehen eines Hindernisses},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{firmware}{}%
{%
\gls@defglossaryentry{firmware}%
{%
name={Firmware},%
sort={Firmware},%
type={main},%
first={Firmware},%
firstplural={Firmwares},%
text={Firmware},%
plural={Firmwares},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{i2c}{}%
{%
\gls@defglossaryentry{i2c}%
{%
name={I$^2$C},%
sort={I$^2$C},%
type={main},%
first={I$^2$C},%
firstplural={I$^2$Cs},%
text={I$^2$C},%
plural={I$^2$Cs},%
description={Der \textit {Inter-Integrated Circuit} ist ein serieller Datenbus zur Kommunikation zwischen Schaltkreisen},%
descriptionplural={Der \textit {Inter-Integrated Circuit} ist ein serieller Datenbus zur Kommunikation zwischen Schaltkreisen},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{exception}{}%
{%
\gls@defglossaryentry{exception}%
{%
name={Exception},%
sort={Exception},%
type={main},%
first={Exception},%
firstplural={Exceptions},%
text={Exception},%
plural={Exceptions},%
description={Prüfen ob bestimmte Gegebenheiten vorhanden sind und darauf explizit reagieren.},%
descriptionplural={Prüfen ob bestimmte Gegebenheiten vorhanden sind und darauf explizit reagieren.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{spi}{}%
{%
\gls@defglossaryentry{spi}%
{%
name={SPI},%
sort={SPI},%
type={main},%
first={SPI},%
firstplural={SPIs},%
text={SPI},%
plural={SPIs},%
description={Bei dem \textit {Serial Peripheral Interface} handelt es sich um einen synchronen Bus. Der nach dem Master-Slave-Prinzip arbeitet und für die Kommunikation von digitalen Schaltungen benutzt wird},%
descriptionplural={Bei dem \textit {Serial Peripheral Interface} handelt es sich um einen synchronen Bus. Der nach dem Master-Slave-Prinzip arbeitet und für die Kommunikation von digitalen Schaltungen benutzt wird},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{i2s}{}%
{%
\gls@defglossaryentry{i2s}%
{%
name={I$^2$S},%
sort={I$^2$S},%
type={main},%
first={I$^2$S},%
firstplural={I$^2$Ss},%
text={I$^2$S},%
plural={I$^2$Ss},%
description={Das \textit {Inter-IC Sound Interface} wird zum Übertragen von seriellen digitalen Audiodaten zwischen Schaltkreisen genutzt},%
descriptionplural={Das \textit {Inter-IC Sound Interface} wird zum Übertragen von seriellen digitalen Audiodaten zwischen Schaltkreisen genutzt},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{usb}{}%
{%
\gls@defglossaryentry{usb}%
{%
name={USB},%
sort={USB},%
type={main},%
first={USB},%
firstplural={USBs},%
text={USB},%
plural={USBs},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{csv}{}%
{%
\gls@defglossaryentry{csv}%
{%
name={CSV},%
sort={CSV},%
type={main},%
first={CSV},%
firstplural={CSVs},%
text={CSV},%
plural={CSVs},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{userspace}{}%
{%
\gls@defglossaryentry{userspace}%
{%
name={Userspace},%
sort={Userspace},%
type={main},%
first={Userspace},%
firstplural={Userspaces},%
text={Userspace},%
plural={Userspaces},%
description={Wenn ein Prozess andere Programme startet ohne dabei spezielle Bibliotheken zu nutzen die es möglich machen, spezielle Funktionen direkt im Quelltext zu benutzen die das gleiche machen würden, nennt man diese User-Prozesse da die separiert in den RAM kopiert werden müssen und der Kernel überwacht was mit ihnen passiert.},%
descriptionplural={Wenn ein Prozess andere Programme startet ohne dabei spezielle Bibliotheken zu nutzen die es möglich machen, spezielle Funktionen direkt im Quelltext zu benutzen die das gleiche machen würden, nennt man diese User-Prozesse da die separiert in den RAM kopiert werden müssen und der Kernel überwacht was mit ihnen passiert.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{kernelspace}{}%
{%
\gls@defglossaryentry{kernelspace}%
{%
name={Kernelspace},%
sort={Kernelspace},%
type={main},%
first={Kernelspace},%
firstplural={Kernelspaces},%
text={Kernelspace},%
plural={Kernelspaces},%
description={Funktionen die schon im RAM stehen, speziell im für den Kernel reservierten Bereich, da sie Teile des Kernels sind, werden im Kernel-Space ausgführt.},%
descriptionplural={Funktionen die schon im RAM stehen, speziell im für den Kernel reservierten Bereich, da sie Teile des Kernels sind, werden im Kernel-Space ausgführt.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ipk}{}%
{%
\gls@defglossaryentry{ipk}%
{%
name={ipk},%
sort={ipk},%
type={main},%
first={ipk},%
firstplural={ipks},%
text={ipk},%
plural={ipks},%
description={Dateiformat das von Paketmanagern benutzt wird die auf dem ipkg basieren.},%
descriptionplural={Dateiformat das von Paketmanagern benutzt wird die auf dem ipkg basieren.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{lzma}{}%
{%
\gls@defglossaryentry{lzma}%
{%
name={LZMA},%
sort={LZMA},%
type={main},%
first={LZMA},%
firstplural={LZMAs},%
text={LZMA},%
plural={LZMAs},%
description={\textit {Lempel-Ziv-Markow-Algorithmus}, hat eine hohe Datenkompressionsrate bei sehr hoher Entpack-Geschwindigkeit},%
descriptionplural={\textit {Lempel-Ziv-Markow-Algorithmus}, hat eine hohe Datenkompressionsrate bei sehr hoher Entpack-Geschwindigkeit},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{squashfs}{}%
{%
\gls@defglossaryentry{squashfs}%
{%
name={SquashFS},%
sort={SquashFS},%
type={main},%
first={SquashFS},%
firstplural={SquashFSs},%
text={SquashFS},%
plural={SquashFSs},%
description={Komprimiertes Dateisystem für Linux was nur lesbar ist.},%
descriptionplural={Komprimiertes Dateisystem für Linux was nur lesbar ist.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{jason}{}%
{%
\gls@defglossaryentry{jason}%
{%
name={Jason},%
sort={Jason},%
type={main},%
first={Jason},%
firstplural={Jasons},%
text={Jason},%
plural={Jasons},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{msb}{}%
{%
\gls@defglossaryentry{msb}%
{%
name={MSB},%
sort={MSB},%
type={main},%
first={MSB},%
firstplural={MSBs},%
text={MSB},%
plural={MSBs},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{lsb}{}%
{%
\gls@defglossaryentry{lsb}%
{%
name={LSB},%
sort={LSB},%
type={main},%
first={LSB},%
firstplural={LSBs},%
text={LSB},%
plural={LSBs},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{batch}{}%
{%
\gls@defglossaryentry{batch}%
{%
name={Batch},%
sort={Batch},%
type={main},%
first={Batch},%
firstplural={Batchs},%
text={Batch},%
plural={Batchs},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{shell}{}%
{%
\gls@defglossaryentry{shell}%
{%
name={Shell},%
sort={Shell},%
type={main},%
first={Shell},%
firstplural={Shells},%
text={Shell},%
plural={Shells},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{deadlock}{}%
{%
\gls@defglossaryentry{deadlock}%
{%
name={Deadlock},%
sort={Deadlock},%
type={main},%
first={Deadlock},%
firstplural={Deadlocks},%
text={Deadlock},%
plural={Deadlocks},%
description={Wartet ein Prozess auf einen anderen Prozess, der wiederum auf den anderen wartet, z.B. zwecks lesen und schreiben einer Pipe, dann hat man eine Deadlock. Dabei werden keine weiteren wesentlichen System-Ressourcen benutzt, da sich beide in einen inaktiven Wartezustand befinden.},%
descriptionplural={Wartet ein Prozess auf einen anderen Prozess, der wiederum auf den anderen wartet, z.B. zwecks lesen und schreiben einer Pipe, dann hat man eine Deadlock. Dabei werden keine weiteren wesentlichen System-Ressourcen benutzt, da sich beide in einen inaktiven Wartezustand befinden.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{raceCondition}{}%
{%
\gls@defglossaryentry{raceCondition}%
{%
name={Race Condition},%
sort={Race Condition},%
type={main},%
first={Race Condition},%
firstplural={Race Conditions},%
text={Race Condition},%
plural={Race Conditions},%
description={Wenn mehrere Prozesse auf das selbe gleichzeitig zugreifen, könnte in einem ein anderer Wert als bei dem anderen Prozess vorliegen, da er vielleicht noch nicht fertig mit der Operation war.},%
descriptionplural={Wenn mehrere Prozesse auf das selbe gleichzeitig zugreifen, könnte in einem ein anderer Wert als bei dem anderen Prozess vorliegen, da er vielleicht noch nicht fertig mit der Operation war.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{spawnen}{}%
{%
\gls@defglossaryentry{spawnen}%
{%
name={spawnen},%
sort={spawnen},%
type={main},%
first={spawnen},%
firstplural={spawnens},%
text={spawnen},%
plural={spawnens},%
description={Ausführen eines neuen Kind-Prozesses.},%
descriptionplural={Ausführen eines neuen Kind-Prozesses.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{posix}{}%
{%
\gls@defglossaryentry{posix}%
{%
name={POSIX},%
sort={POSIX},%
type={main},%
first={POSIX},%
firstplural={POSIXs},%
text={POSIX},%
plural={POSIXs},%
description={Portable Operating System Interface ist eine API für UNIX-artige Betriebssysteme und stellt erweiterte Funktionen zur Verfügung. Es dient als Interface zwischen OS und Anwendersoftware.},%
descriptionplural={Portable Operating System Interface ist eine API für UNIX-artige Betriebssysteme und stellt erweiterte Funktionen zur Verfügung. Es dient als Interface zwischen OS und Anwendersoftware.},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{raShield}{}%
{%
\gls@defglossaryentry{raShield}%
{%
name={shield},%
sort={shield},%
type={main},%
first={shield},%
firstplural={shields},%
text={shield},%
plural={shields},%
description={Erweiterungs-Modul für den Raspberry PI},%
descriptionplural={Erweiterungs-Modul für den Raspberry PI},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{BLE}{}%
{%
\gls@defglossaryentry{BLE}%
{%
name={BLE},%
sort={BLE},%
type={main},%
first={BLE},%
firstplural={BLEs},%
text={BLE},%
plural={BLEs},%
description={Bluetooth Low Energie, nicht für Datenstreaming geeignet TODO},%
descriptionplural={Bluetooth Low Energie, nicht für Datenstreaming geeignet TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ZigBee}{}%
{%
\gls@defglossaryentry{ZigBee}%
{%
name={ZigBee},%
sort={ZigBee},%
type={main},%
first={ZigBee},%
firstplural={ZigBees},%
text={ZigBee},%
plural={ZigBees},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Bluetooth}{}%
{%
\gls@defglossaryentry{Bluetooth}%
{%
name={Bluetooth},%
sort={Bluetooth},%
type={main},%
first={Bluetooth},%
firstplural={Bluetooths},%
text={Bluetooth},%
plural={Bluetooths},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{AP}{}%
{%
\gls@defglossaryentry{AP}%
{%
name={AP},%
sort={AP},%
type={main},%
first={AP},%
firstplural={APs},%
text={AP},%
plural={APs},%
description={Ein \textit {Access Point} ist ein drahtloser Zugangspunkt für Geräte die über WiFi Hardware verfügen},%
descriptionplural={Ein \textit {Access Point} ist ein drahtloser Zugangspunkt für Geräte die über WiFi Hardware verfügen},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{SAS}{}%
{%
\gls@defglossaryentry{SAS}%
{%
name={SAS},%
sort={SAS},%
type={main},%
first={SAS},%
firstplural={SASs},%
text={SAS},%
plural={SASs},%
description={\textit {Serial Attached SCSI} ist eine serielle Schnittstelle, zum Austausch von Daten zwischen Datenträgern, wie Festplatten oder Laufwerken},%
descriptionplural={\textit {Serial Attached SCSI} ist eine serielle Schnittstelle, zum Austausch von Daten zwischen Datenträgern, wie Festplatten oder Laufwerken},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{SCSI}{}%
{%
\gls@defglossaryentry{SCSI}%
{%
name={SCSI},%
sort={SCSI},%
type={main},%
first={SCSI},%
firstplural={SCSIs},%
text={SCSI},%
plural={SCSIs},%
description={Das \textit {Small Computer System Interface} ist eine parallele Schnittstelle, die Hauptsächlich für die Übertragung zwischen Haupt Bus und den Peripheriegeräten entwickelt wurde},%
descriptionplural={Das \textit {Small Computer System Interface} ist eine parallele Schnittstelle, die Hauptsächlich für die Übertragung zwischen Haupt Bus und den Peripheriegeräten entwickelt wurde},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{SAMBA}{}%
{%
\gls@defglossaryentry{SAMBA}%
{%
name={SAMBA},%
sort={SAMBA},%
type={main},%
first={SAMBA},%
firstplural={SAMBAs},%
text={SAMBA},%
plural={SAMBAs},%
description={Sammlung von Programmen mit dem Ziel Windows Datei- und Drucker- Dienste unter Unix verfügbar zu machen},%
descriptionplural={Sammlung von Programmen mit dem Ziel Windows Datei- und Drucker- Dienste unter Unix verfügbar zu machen},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{3G}{}%
{%
\gls@defglossaryentry{3G}%
{%
name={3G},%
sort={3G},%
type={main},%
first={3G},%
firstplural={3Gs},%
text={3G},%
plural={3Gs},%
description={Dritte Generation der mobilen Übertragungstechnik. Ermöglicht DSL ähnliche Übertragungsraten im Mbit Bereich. Auch unter den Namen HSPA bekannt},%
descriptionplural={Dritte Generation der mobilen Übertragungstechnik. Ermöglicht DSL ähnliche Übertragungsraten im Mbit Bereich. Auch unter den Namen HSPA bekannt},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{POE}{}%
{%
\gls@defglossaryentry{POE}%
{%
name={Power over Ethernet},%
sort={Power over Ethernet},%
type={main},%
first={Power over Ethernet},%
firstplural={Power over Ethernets},%
text={Power over Ethernet},%
plural={Power over Ethernets},%
description={\textit {Power over Ethernet} ist eine Technik, Geräte über Ethernet-Kabel mit Strom zu versorgen},%
descriptionplural={\textit {Power over Ethernet} ist eine Technik, Geräte über Ethernet-Kabel mit Strom zu versorgen},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{SoC}{}%
{%
\gls@defglossaryentry{SoC}%
{%
name={SoC},%
sort={SoC},%
type={main},%
first={SoC},%
firstplural={SoCs},%
text={SoC},%
plural={SoCs},%
description={Bei einem \textit {System-on-a-Chip} handelt es sich um ein Verbund unterschiedlicher Schaltkreise. Die jeweils eine Funktionalität realisieren und in Kombination ein komplettes dediziertes System ergeben},%
descriptionplural={Bei einem \textit {System-on-a-Chip} handelt es sich um ein Verbund unterschiedlicher Schaltkreise. Die jeweils eine Funktionalität realisieren und in Kombination ein komplettes dediziertes System ergeben},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{DIE}{}%
{%
\gls@defglossaryentry{DIE}%
{%
name={Die},%
sort={Die},%
type={main},%
first={Die},%
firstplural={Dies},%
text={Die},%
plural={Dies},%
description={Sehr kompakter für ein Ziel definierter Schaltkreis, auf einem Halbleitermaterial},%
descriptionplural={Sehr kompakter für ein Ziel definierter Schaltkreis, auf einem Halbleitermaterial},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{GPIO}{}%
{%
\gls@defglossaryentry{GPIO}%
{%
name={GPIO},%
sort={GPIO},%
type={main},%
first={GPIO},%
firstplural={GPIOs},%
text={GPIO},%
plural={GPIOs},%
description={\textit {General-Purpose Input/Output} sind bestimmte PINs, die dazu erdacht wurden weitere Peripherie in ein bestehendes System zu integrieren},%
descriptionplural={\textit {General-Purpose Input/Output} sind bestimmte PINs, die dazu erdacht wurden weitere Peripherie in ein bestehendes System zu integrieren},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{FCC}{}%
{%
\gls@defglossaryentry{FCC}%
{%
name={FCC},%
sort={FCC},%
type={main},%
first={FCC},%
firstplural={FCCs},%
text={FCC},%
plural={FCCs},%
description={Die \textit {Federal Communications Commission} prüft Geräte, die über eine Funktechnik verfügen, auf Einhaltung diverser Normen},%
descriptionplural={Die \textit {Federal Communications Commission} prüft Geräte, die über eine Funktechnik verfügen, auf Einhaltung diverser Normen},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{RoHS}{}%
{%
\gls@defglossaryentry{RoHS}%
{%
name={RoHS},%
sort={RoHS},%
type={main},%
first={RoHS},%
firstplural={RoHSs},%
text={RoHS},%
plural={RoHSs},%
description={TODO},%
descriptionplural={TODO},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ISR}{}%
{%
\gls@defglossaryentry{ISR}%
{%
name={ISR},%
sort={ISR},%
type={main},%
first={ISR},%
firstplural={ISRs},%
text={ISR},%
plural={ISRs},%
description={Bei einer \textit {Interrupt Service Routine} handelt es sich um ein Programmstück, das ausgeführt wird, wenn eine Unterbrechungsanforderung (Interrupt) aufgetreten ist},%
descriptionplural={Bei einer \textit {Interrupt Service Routine} handelt es sich um ein Programmstück, das ausgeführt wird, wenn eine Unterbrechungsanforderung (Interrupt) aufgetreten ist},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{PCB}{}%
{%
\gls@defglossaryentry{PCB}%
{%
name={PCB},%
sort={PCB},%
type={main},%
first={PCB},%
firstplural={PCBs},%
text={PCB},%
plural={PCBs},%
description={Ein \textit {printed circuit board}, ist ein Träger für elektronische Bauteile},%
descriptionplural={Ein \textit {printed circuit board}, ist ein Träger für elektronische Bauteile},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{OTG}{}%
{%
\gls@defglossaryentry{OTG}%
{%
name={OTG},%
sort={OTG},%
type={main},%
first={OTG},%
firstplural={OTGs},%
text={OTG},%
plural={OTGs},%
description={USB \textit {On-the-go} Syteme können, im Unterschied zu normalen USB Geräten, die Master und Slave Rolle wahlweise einnehmen},%
descriptionplural={USB \textit {On-the-go} Syteme können, im Unterschied zu normalen USB Geräten, die Master und Slave Rolle wahlweise einnehmen},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Framework}{}%
{%
\gls@defglossaryentry{Framework}%
{%
name={Framework},%
sort={Framework},%
type={main},%
first={Framework},%
firstplural={Frameworks},%
text={Framework},%
plural={Frameworks},%
description={Eine definierte Umgebung, die als Basis und für Veränderungen von Software bereitgestellt wird},%
descriptionplural={Eine definierte Umgebung, die als Basis und für Veränderungen von Software bereitgestellt wird},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{uci}{}%
{%
\gls@defglossaryentry{uci}%
{%
name={uci},%
sort={uci},%
type={main},%
first={uci},%
firstplural={ucis},%
text={uci},%
plural={ucis},%
description={Bei dem \textit {Unified Configuration Interface} handelt es sich um eine Schnittstelle, die es in dem OpenWrt Linux Derivat ermöglicht, zentral an einem bestimmten Punkt im Dateisystem, Konfigurationsdateien für kompatible Programme zu hinterlegen},%
descriptionplural={Bei dem \textit {Unified Configuration Interface} handelt es sich um eine Schnittstelle, die es in dem OpenWrt Linux Derivat ermöglicht, zentral an einem bestimmten Punkt im Dateisystem, Konfigurationsdateien für kompatible Programme zu hinterlegen},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{MAN}{}%
{%
\gls@defglossaryentry{MAN}%
{%
name={MAN},%
sort={MAN},%
type={main},%
first={MAN},%
firstplural={MANs},%
text={MAN},%
plural={MANs},%
description={Befehl zum lesen der Manual Pages. Eine Art von Software Dokumentation für Unix Systeme},%
descriptionplural={Befehl zum lesen der Manual Pages. Eine Art von Software Dokumentation für Unix Systeme},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{GNU}{}%
{%
\gls@defglossaryentry{GNU}%
{%
name={GNU},%
sort={GNU},%
type={main},%
first={GNU},%
firstplural={GNUs},%
text={GNU},%
plural={GNUs},%
description={Der Name GNU steht für \textit {``GNU Not Unix''} und ist ein rekursives Akronym. Dabei sind wesentlich die freien Programme rund um den Kernel gemeint. Frei steht hierbei nicht für umsonst im finanziellen Sinn, sondern für Freiheit. Mit Linux wird deshalb meistens GNU/Linux gemeint},%
descriptionplural={Der Name GNU steht für \textit {``GNU Not Unix''} und ist ein rekursives Akronym. Dabei sind wesentlich die freien Programme rund um den Kernel gemeint. Frei steht hierbei nicht für umsonst im finanziellen Sinn, sondern für Freiheit. Mit Linux wird deshalb meistens GNU/Linux gemeint},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{uClibc}{}%
{%
\gls@defglossaryentry{uClibc}%
{%
name={uClibc},%
sort={uClibc},%
type={main},%
first={uClibc},%
firstplural={uClibcs},%
text={uClibc},%
plural={uClibcs},%
description={Es handelt sich hierbei um eine kleinere Version der glibc. Jene für Standard Linux Systeme entwickelt wurde, um sämtliche C-Standards auf möglichst vielen Plattformen zu unterstützen. Die uClibc Bibliothek ist hingegen kompakter und macht es möglich ein Linux auch auf einem System ohne MMU zum funktionieren zu bekommen},%
descriptionplural={Es handelt sich hierbei um eine kleinere Version der glibc. Jene für Standard Linux Systeme entwickelt wurde, um sämtliche C-Standards auf möglichst vielen Plattformen zu unterstützen. Die uClibc Bibliothek ist hingegen kompakter und macht es möglich ein Linux auch auf einem System ohne MMU zum funktionieren zu bekommen},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{lazy_unmounting}{}%
{%
\gls@defglossaryentry{lazy_unmounting}%
{%
name={lazy unmounting},%
sort={lazy unmounting},%
type={main},%
first={lazy unmounting},%
firstplural={lazy unmountings},%
text={lazy unmounting},%
plural={lazy unmountings},%
description={Entfernt das spezifizierte Dateisystem erst, wenn auf dieses keine Zugriffe mehr erfolgen},%
descriptionplural={Entfernt das spezifizierte Dateisystem erst, wenn auf dieses keine Zugriffe mehr erfolgen},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{SMB}{}%
{%
\gls@defglossaryentry{SMB}%
{%
name={SMB},%
sort={SMB},%
type={main},%
first={SMB},%
firstplural={SMBs},%
text={SMB},%
plural={SMBs},%
description={Das \textit {Server Message Block} Protokoll ist ein Kommunikationsprotokoll, für Dateien und andere Dienste in Netzwerken},%
descriptionplural={Das \textit {Server Message Block} Protokoll ist ein Kommunikationsprotokoll, für Dateien und andere Dienste in Netzwerken},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{CIFS}{}%
{%
\gls@defglossaryentry{CIFS}%
{%
name={CIFS},%
sort={CIFS},%
type={main},%
first={CIFS},%
firstplural={CIFSs},%
text={CIFS},%
plural={CIFSs},%
description={Beim \textit {Common Internet File System} handelt es sich um eine von Microsoft erweiterte Version des SMB},%
descriptionplural={Beim \textit {Common Internet File System} handelt es sich um eine von Microsoft erweiterte Version des SMB},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{RAID}{}%
{%
\gls@defglossaryentry{RAID}%
{%
name={RAID},%
sort={RAID},%
type={main},%
first={RAID},%
firstplural={RAIDs},%
text={RAID},%
plural={RAIDs},%
description={Bei einem \textit {Redundant Array of Independent Disks}, handelt es sich um einen Verbund von Festplatten, die logisch zu einem Laufwerk zusammengefasst werden. Mit dem Ziel von höherer Datenverfügbarkeit zur Erhöhung der Ausfallsicherheit, oder Erreichung eines höheren Datendurchsatzes},%
descriptionplural={Bei einem \textit {Redundant Array of Independent Disks}, handelt es sich um einen Verbund von Festplatten, die logisch zu einem Laufwerk zusammengefasst werden. Mit dem Ziel von höherer Datenverfügbarkeit zur Erhöhung der Ausfallsicherheit, oder Erreichung eines höheren Datendurchsatzes},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{WPS}{}%
{%
\gls@defglossaryentry{WPS}%
{%
name={WPS},%
sort={WPS},%
type={main},%
first={WPS},%
firstplural={WPSs},%
text={WPS},%
plural={WPSs},%
description={Das \textit {Wi-Fi Protected Setup} wird genutzt um eine erleichterte Integrierung eines WiFi Gerätes in ein bestehendes Netzwerk zu ermöglichen},%
descriptionplural={Das \textit {Wi-Fi Protected Setup} wird genutzt um eine erleichterte Integrierung eines WiFi Gerätes in ein bestehendes Netzwerk zu ermöglichen},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{E-Ink}{}%
{%
\gls@defglossaryentry{E-Ink}%
{%
name={E-Ink},%
sort={E-Ink},%
type={main},%
first={E-Ink},%
firstplural={E-Inks},%
text={E-Ink},%
plural={E-Inks},%
description={E-Ink übersetzt \textit {elektronische Tinte}, wird als Synonym für elektronisches Papier verwendet. Dabei wird, im Gegensatz zu anderen Anzeigetechniken, das Licht nicht erzeugt, sondern wie beim Papier reflektiert. Dadurch ist diese Technologie extrem Energiesparsam},%
descriptionplural={E-Ink übersetzt \textit {elektronische Tinte}, wird als Synonym für elektronisches Papier verwendet. Dabei wird, im Gegensatz zu anderen Anzeigetechniken, das Licht nicht erzeugt, sondern wie beim Papier reflektiert. Dadurch ist diese Technologie extrem Energiesparsam},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{uSD}{}%
{%
\gls@defglossaryentry{uSD}%
{%
name={\textmu SD},%
sort={\textmu SD},%
type={main},%
first={\textmu SD},%
firstplural={\textmu SDs},%
text={\textmu SD},%
plural={\textmu SDs},%
description={11,0 x 15,0 x 0,7 kleines Flash-Speichermedium},%
descriptionplural={11,0 x 15,0 x 0,7 kleines Flash-Speichermedium},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{SD}{}%
{%
\gls@defglossaryentry{SD}%
{%
name={SD},%
sort={SD},%
type={main},%
first={SD},%
firstplural={SDs},%
text={SD},%
plural={SDs},%
description={\textit {Secure Digital} ist ein digitales Speichermedium, das die Flash-Technologie verwendet},%
descriptionplural={\textit {Secure Digital} ist ein digitales Speichermedium, das die Flash-Technologie verwendet},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Widgets}{}%
{%
\gls@defglossaryentry{Widgets}%
{%
name={Widgets},%
sort={Widgets},%
type={main},%
first={Widgets},%
firstplural={Widgetss},%
text={Widgets},%
plural={Widgetss},%
description={Bei einem Widget handelt es sich um eine an ein Graphisches System gebundene Software, die deren Plugin-System zur Anbindung nutzt},%
descriptionplural={Bei einem Widget handelt es sich um eine an ein Graphisches System gebundene Software, die deren Plugin-System zur Anbindung nutzt},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{4G}{}%
{%
\gls@defglossaryentry{4G}%
{%
name={4G},%
sort={4G},%
type={main},%
first={4G},%
firstplural={4Gs},%
text={4G},%
plural={4Gs},%
description={Nachfolgetechnologie zu 3G. Ermöglicht eine viel höhere Datenübertragungsrate als HSPA. Auch unter dem Namen LTE bekannt},%
descriptionplural={Nachfolgetechnologie zu 3G. Ermöglicht eine viel höhere Datenübertragungsrate als HSPA. Auch unter dem Namen LTE bekannt},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{SPARC}{}%
{%
\gls@defglossaryentry{SPARC}%
{%
name={SPARC},%
sort={SPARC},%
type={main},%
first={SPARC},%
firstplural={SPARCs},%
text={SPARC},%
plural={SPARCs},%
description={Die \textit {Scalable Processor ARChitecture} ist eine offene Mikroprozessorarchitektur von Oracle und verfügt über die Möglichkeit eine skalierende Anzahl von Registern zu verwenden und wird daher in vielen Supercomputern verwendet},%
descriptionplural={Die \textit {Scalable Processor ARChitecture} ist eine offene Mikroprozessorarchitektur von Oracle und verfügt über die Möglichkeit eine skalierende Anzahl von Registern zu verwenden und wird daher in vielen Supercomputern verwendet},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{SDK}{}%
{%
\gls@defglossaryentry{SDK}%
{%
name={SDK},%
sort={SDK},%
type={main},%
first={SDK},%
firstplural={SDKs},%
text={SDK},%
plural={SDKs},%
description={Ein \textit {Software Development Kit} ist eine Sammlung von Anwendungen, Bibliotheken und Hilfsmitteln, um eine Software zu entwickeln},%
descriptionplural={Ein \textit {Software Development Kit} ist eine Sammlung von Anwendungen, Bibliotheken und Hilfsmitteln, um eine Software zu entwickeln},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{ISM}{}%
{%
\gls@defglossaryentry{ISM}%
{%
name={ISM},%
sort={ISM},%
type={main},%
first={ISM},%
firstplural={ISMs},%
text={ISM},%
plural={ISMs},%
description={Bei dem \textit {Industrial, Scientific and Medical} Band handelt es sich um definierte Frequenzbereiche für die Nutzung von Geräten mit Funktechnologie, die je nach Frequenzbereich genehmigt werden, oder mit Störungen rechnen müssen},%
descriptionplural={Bei dem \textit {Industrial, Scientific and Medical} Band handelt es sich um definierte Frequenzbereiche für die Nutzung von Geräten mit Funktechnologie, die je nach Frequenzbereich genehmigt werden, oder mit Störungen rechnen müssen},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{MIPS}{}%
{%
\gls@defglossaryentry{MIPS}%
{%
name={MIPS},%
sort={MIPS},%
type={main},%
first={MIPS},%
firstplural={MIPSs},%
text={MIPS},%
plural={MIPSs},%
description={\textit {Microprocessor without interlocked pipeline stages} ist eine spezielle Prozessorarchitektur, die der RISC Architektur ähnelt. Bei ihr wird verhindert, dass der Prozessor angehalten wird, wenn aktuell ausgeführte Befehle Informationen von Folgebefehlen benötigen. Um die dabei eventuell auftretenden Konflikte zu verhindern, muss der Kompiler spezielle Gegenmaßnahmen vollziehen},%
descriptionplural={\textit {Microprocessor without interlocked pipeline stages} ist eine spezielle Prozessorarchitektur, die der RISC Architektur ähnelt. Bei ihr wird verhindert, dass der Prozessor angehalten wird, wenn aktuell ausgeführte Befehle Informationen von Folgebefehlen benötigen. Um die dabei eventuell auftretenden Konflikte zu verhindern, muss der Kompiler spezielle Gegenmaßnahmen vollziehen},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Loginshell}{}%
{%
\gls@defglossaryentry{Loginshell}%
{%
name={Loginshell},%
sort={Loginshell},%
type={main},%
first={Loginshell},%
firstplural={Loginshells},%
text={Loginshell},%
plural={Loginshells},%
description={Die erste Shell, die nach dem Anmelden an das System gestartet wird. Sie erhält eine spezielle Konfiguration, die an in ihr gestartete Subshells (interactive shell) vererbt wird},%
descriptionplural={Die erste Shell, die nach dem Anmelden an das System gestartet wird. Sie erhält eine spezielle Konfiguration, die an in ihr gestartete Subshells (interactive shell) vererbt wird},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{bugfix}{}%
{%
\gls@defglossaryentry{bugfix}%
{%
name={Bug Fix},%
sort={Bug Fix},%
type={main},%
first={Bug Fix},%
firstplural={Bug Fixs},%
text={Bug Fix},%
plural={Bug Fixs},%
description={Auch unter dem Begriff ``Patch'' bekannt. Dabei handelt es sich um einen Teil einer Software, der dazu gedacht ist, eine bestehende Software durch Korrektur eines Fehlers, schließen einer Sicherheitslücke, oder hinzufügen eines Features, aufzuwerten},%
descriptionplural={Auch unter dem Begriff ``Patch'' bekannt. Dabei handelt es sich um einen Teil einer Software, der dazu gedacht ist, eine bestehende Software durch Korrektur eines Fehlers, schließen einer Sicherheitslücke, oder hinzufügen eines Features, aufzuwerten},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Spawner}{}%
{%
\gls@defglossaryentry{Spawner}%
{%
name={Spawner},%
sort={Spawner},%
type={main},%
first={Spawner},%
firstplural={Spawners},%
text={Spawner},%
plural={Spawners},%
description={Ist der Eltern Prozess, der ein Kind-Prozess spawned/erzeugt/forkt},%
descriptionplural={Ist der Eltern Prozess, der ein Kind-Prozess spawned/erzeugt/forkt},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{Buildroot}{}%
{%
\gls@defglossaryentry{Buildroot}%
{%
name={Buildroot},%
sort={Buildroot},%
type={main},%
first={Buildroot},%
firstplural={Buildroots},%
text={Buildroot},%
plural={Buildroots},%
description={Sammlung von Makefiles, Patches und Skripten zur vereinfachten Generierung einer kompletten embedded Linux Umgebung},%
descriptionplural={Sammlung von Makefiles, Patches und Skripten zur vereinfachten Generierung einer kompletten embedded Linux Umgebung},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{bitbanging}{}%
{%
\gls@defglossaryentry{bitbanging}%
{%
name={Bit-Banging},%
sort={Bit-Banging},%
type={main},%
first={Bit-Banging},%
firstplural={Bit-Bangings},%
text={Bit-Banging},%
plural={Bit-Bangings},%
description={Software Technik für die serielle Kommunikation mit Hardware. Die Software ist dabei Verantwortlich für das Timing und die Zustände. Wird oft zur Emulation von Schnittstellen wie z.B. SPI und I$^2$C verwendet},%
descriptionplural={Software Technik für die serielle Kommunikation mit Hardware. Die Software ist dabei Verantwortlich für das Timing und die Zustände. Wird oft zur Emulation von Schnittstellen wie z.B. SPI und I$^2$C verwendet},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%
}%
\ifglsentryexists{lvm}{}%
{%
\gls@defglossaryentry{lvm}%
{%
name={LVM},%
sort={LVM},%
type={acronym},%
first={Logical Volume Manager (LVM)},%
firstplural={Logical Volume Managers(LVMs)},%
text={LVM},%
plural={LVMs},%
description={Logical Volume Manager},%
descriptionplural={Logical Volume Manager\acrpluralsuffix },%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Logical Volume Manager},%
longplural={Logical Volume Managers},%
short={LVM},%
shortplural={LVMs},%
counter={page},%
parent={},%
%
}%
}%
